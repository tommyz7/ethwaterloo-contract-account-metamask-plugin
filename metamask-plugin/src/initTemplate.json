{
  "html": "<!doctype html>\n\n<html>\n\n</head>\n  <title>Hello Plugins!</title>\n</head>\n\n<body>\n  <h1>Hello Plugins!</h1>\n  <p>Make sure the plugin bundle is currently hosted on localhost:8081 for this to work.</p>\n  <button class=\"connect\">Connect</button>\n  <button class=\"sendHello\">Send Hello</button>\n</body>\n\n<script>\n\nconst origin = 'http://localhost:8081/package.json'\nconst pluginOrigin = `wallet_plugin_${origin}`\n\nconst connectButton = document.querySelector('button.connect')\nconst sendButton = document.querySelector('button.sendHello')\n\nconnectButton.addEventListener('click', connect)\nsendButton.addEventListener('click', send)\n\nasync function connect () {\n  await ethereum.send({\n    method: 'wallet_requestPermissions',\n    params: [{\n      [pluginOrigin]: {}\n    }]\n  })\n}\n\nasync function send () {\n  try {\n    const response = await ethereum.send({\n      method: pluginOrigin,\n      params: [{\n        method: 'hello'\n      }]\n    })\n  } catch (err) {\n    console.error(err)\n    alert('Problem happened: ' + err.message || err)\n  }\n}\n\n</script>\n\n</html>\n",
  "js": "wallet.registerRpcMessageHandler(async (originString, requestObject) => {\n  switch (requestObject.method) {\n    case 'hello':\n      return wallet.send({\n        method: 'alert',\n        params: [`Hello, ${originString}!`]\n      })\n    default:\n      throw new Error('Method not found.')\n  }\n})\n"
}